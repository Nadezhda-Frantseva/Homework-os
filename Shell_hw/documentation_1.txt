Всяка задача започва с проверки за входните данни.
1ва задача:
Проверки: дали се подава само един аргумент на скрипта и дали този аргумент е файл.
Решение: С while цикъл обхождам ред по ред файла на записаните URL-та на страници и проверявам реда да не е коментар. Ако не е, 
намирам датата, преформатирам я, за да има една нула отпред при единствено число за ден и я слагам в променливата date.
Започвам втори, вътрешен цикъл. В него първо намирам номерата на редовете и съответните редове с категориите в сайта, тези редове ги обработвам,
 за да изглеждат така: номер на ред:категория. Пазя тази информация в променливата catline. 
Започвам трети, вътрешен на втория цикъл, в който обхождам редовете на catline. В променливата category пазя категорията от съответния ред в catline.
В променливата start пазя номера на реда на тази категория като начало на таблицата, от която ще извличам данните. След това проверявам дали не съм 
на последния ред от catline. Ако съм, то: в променливата end взимам номера на последния ред от дадената таблица (този ред съдържа текста </body> на всяка таблица).
Ако не съм, то: махам първия ред на catline и end става номера на първия ред от catline. После взимам разликата между start и end и я запазвам в 
променливата diff. В променливата code пазя редовете от разликата(diff) до края(end), съдържащи <tr class=\"ResLine - така започва всеки ред с 
търсената информация от дадената таблица. Заменям html кода с плюсове. Оставям само търсената информация, разделена от тези плюсове.
Започвам четвърти, вътрешен на третия цикъл, в който обхождам редовете на code. Извличам турсената информация от всеки ред:
place - мястото в класирането
name - имена на участника
national - националност
call - позивна
minsec - време за завършване
fox - брой открити предаватели
strnum - старт номер
Накрая изпринтвам намерения резултат от всяка една променлива, разделена с : 
2ра задача:
Проверки: дали вторият аргумент е стринга "top_places" - ако да, то проверките са:
за броят на подадените аргументи (дали е 5), дали първият аргумен е файл, дали третият е във формат на категория (главна буква, последвана от цифри),
дали четвъртият и петият са числа.
Ако вторият аргумент е стринга "parts", то проверките са: дали броят на подадените аргументи е 3, дали първият аргумен е файл, дали третият е 
празния низ или последователност от цифри.
Ако вторият аргумент не е нито един от стриговете "top_places" или "parts", то се влиза в else-ния случай.
Решение, ако вторият аргумент е стринга "top_places":
В променливата result държa всички редове от изхода на първа задача, на които има третият аргумент - съответната категория.
Променливата temp държи четвъртият аргумент = число.
Започваме while цикъл, четящ ред по ред от променливата result. Прави проверка, ако мястото е число и ако е по-малко или равно на temp, тогава 
взимаме името и го слагаме в нова променлива. Накрая принтим първите n-реда от новата променлива.
Решение, ако вторият аргумент е стринга "parts":
В променливата result2 държa всички редове от изхода на първа задача, на които има третият аргумент - името на участника, като обработвам
променливата да държи само категорията и датата на съответното име, разделени от спейс. След това ги сортирам по категория и итривам
повтарящите се редове. Започваме while цикъл, четящ ред по ред от променливата result2. Взимам номерата на първото и на последното срещане на 
блок от повтаряща се категория от result2. Ако номерата на първото и на последното срещане съвпадат, то само принтя реда и продължавам да чета
на следваща итерация. Ако не съвпадат, взимам разликата им в променливата diff и в променливата code взимам само редовете от diff+1 до последното
срещане на повтаряща се категория от result2, сортирани по датата. След това изпринтвам първия ред на code. Започвам нов вътрешен цикъл, четящ от 
редовете на code като в него принтя датите, разделени със запетаи на същия ред. Проверката в този цикъл е за последната дата - да не й се слага запетая.
Накрая, ако броят на редовете в result2 е равен на номерът на последното срещане на блока от повтаряща се категория, то спирам изпълнението на цикъла.

                        